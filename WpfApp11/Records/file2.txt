using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.InteropServices;
using Mindscape.Raygun4Net.Messages;
using ControlzEx.Standard;

namespace ConsoleApp24
{
    //fixed - забороняє переміщати данні, бо в с++ масиві є показники які 
    //вказують на ячеку в якій вже нема того елемента
    //unsafe - позначка, що це небезпечний код
    public unsafe struct OsVersionInfo
    {
        public uint osVersionInfoSize;
        public uint majorVersion;
        public uint minorVersion;
        public uint buildNumber;
        public uint platformId;
        public fixed byte servicePackVersion[128];
    }

    public struct NONCLIENTMETRICS
    {
        public int cbSize;
        public int iBorderWidth;
        public int iScrollWidth;
        public int iScrollHeight;
        public int iCaptionWidth;
        public int iCaptionHeight;
        public LOGFONT lfCaptionFont;
        public int iSMCaptionWidth;
        public int iSMCaptionHeight;
        public LOGFONT lfSMCaptionFont;
        public int iMenuWidth;
        public int iMenuHeight;
        public LOGFONT lfMenuFont;
        public LOGFONT lfStatusFont;
        public LOGFONT lfMessageFont;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal struct SYSTEM_INFO
    {
        internal ushort wProcessorArchitecture;
        internal ushort wReserved;
        internal uint dwPageSize;
        internal IntPtr lpMinimumApplicationAddress;
        internal IntPtr lpMaximumApplicationAddress;
        internal IntPtr dwActiveProcessorMask;
        internal uint dwNumberOfProcessors;
        internal uint dwProcessorType;
        internal uint dwAllocationGranularity;
        internal ushort wProcessorLevel;
        internal ushort wProcessorRevision;
    }


    class DllImportExample
        // SetLastError - дозволяє вказати можливість запуску функції SetLastErrore
        // WinApi у випадку помилки виконання
        // CallingConvention - дозволяє оптимізувати виклик некерованої функції, регулюючі способи
        //виклику, передачу параметрів і повернення резултатів її робити 
        // CharSet - можливість задати кодування стрічок під час передачі з некерованого коду
        // в некерований код
        // EntryPoint - дає можливість використовувати свою назву вказавши справжню назву
        // ExactSpelling - чи має змінюватися ім'я методу в залежності від кодування
    {
        [DllImport("User32.dll", ExactSpelling = true)]
        public static extern int MessageBoxA(IntPtr h, string m, string c, int type);



        [DllImport("Kernel32.dll", EntryPoint = "GetVersionEx")]
        public static extern bool GetVersion(ref OsVersionInfo versionInfo);


        [DllImport("User32.dll", CharSet = CharSet.Auto)]
        public static extern int MessageBox(IntPtr h, string m, string c, int type);


        [DllImport("msvcrt.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        public static extern int printf(string format, int i, string s);
        [DllImport("msvcrt.dll", CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        public static extern int printf(string format, int i, double s);

        [DllImport("advapi32.dll", EntryPoint="GetUserNameW", SetLastError=true)]
        public static extern bool GetUserName(StringBuilder sb, ref Int32 length);

        [DllImport("User32.dll")]
        public static extern int SetForegroundWindow(IntPtr Hwnd);

        [DllImport("user32.dll", CharSet = CharSet.Auto)]
        public static extern Int32 SystemParametersInfo(UInt32 uiAction, UInt32 uiParam, String pvParam, UInt32 fWinIni);

        [DllImport("user32", CharSet = CharSet.Auto)]
        public static extern int SystemParametersInfo(int uAction, int uParam, ref NONCLIENTMETRICS lpvParam, int fuWinIni);

        [DllImport("kernel32.dll", SetLastError = true)]
        internal static extern void GetSystemInfo(ref SYSTEM_INFO Info);



    }
}
